#!/usr/bin/with-contenv /usr/bin/bashio

# Set configuration values to environment variables
export HomeAssistant__Host="supervisor"
export HomeAssistant__WebsocketPath="core/websocket"
export HomeAssistant__Port=80
export HomeAssistant__Token=$SUPERVISOR_TOKEN

export NetDaemon__ApplicationAssembly=$(bashio::config 'app_assembly')
export Logging__Loglevel__Default=$(bashio::config 'log_level') 
export NetDaemon__ApplicationConfigurationFolder=$(bashio::config 'app_config_folder')

declare daemondir="/daemon"

if [ ! -d "/data" ]; then
    bashio::exit.nok "Missing mapping to apps, please map '/data' to your apps folder"
fi

if [ ! -f "/data/options.json" ]; then
    bashio::exit.nok "This container only supports running as Home Assistant add-on!"
fi

if ! bashio::config.has_value "app_assembly"
then
    bashio::log.info "Starting NetDaemon V3 Runtime ..."
    cd "${daemondir}"
    exec dotnet NetDaemon.Host.Default.dll
else
    # We have provided an application assembly setting
    if [[ "${Netdaemon__ApplicationAssembly}" == *.csproj ]]; 
    then
        bashio::exit.nok "csproj deployments are not supported in v3, use compiled option instead!"
    fi

    if [[ "${Netdaemon__ApplicationAssembly}" != *".dll" ]];
    then
        bashio::exit.nok "Assembly needs to point to a .dll file!"
    fi

    # make path relative to data folder (/config/netdaemon if addon) 
    # if the path is a relative path
    if [[ "${Netdaemon__ApplicationAssembly}" != /* ]];
    then
        export Netdaemon__ApplicationAssembly="/config/netdaemon3/${Netdaemon__ApplicationAssembly}"
    fi 

    # The provided application source is ether a project or pre-compiled .Net application
    if ! bashio::fs.file_exists "${Netdaemon__ApplicationAssembly}"; 
    then
        bashio::exit.nok "The assembly ${Netdaemon__ApplicationAssembly} cannot be found. Please check the settings."
    fi
    
    bashio::log.info "Starting NetDaemon V3 pre-built Runtime using assembly ${Netdaemon__ApplicationAssembly}..."
    cd "$(dirname "${Netdaemon__ApplicationAssembly}")" ||  bashio::exit.nok "Could not change directory to run project"

    if [[ "${PWD}" != "$(dirname "${Netdaemon__ApplicationAssembly}")" ]]; then
        bashio::exit.nok "Could not change directory to run custom project"
    fi
    runme="$(basename "${Netdaemon__ApplicationAssembly}")" 
    exec dotnet $runme
fi
